@model NursingStaffPlanningandSchedulingExcellence.Models.ShiftScheduleVM
@{
    var UserId = !string.IsNullOrEmpty(this.Context.Request["userid"]) ? this.Context.Request["userid"].ToString() : "0";
    var Id = !string.IsNullOrEmpty(this.Context.Request["id"]) ? this.Context.Request["id"].ToString() : "0";
    ViewBag.Title = "AddStaff";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var sno = 0;
}
<style>
    .user-profile .user-pro-body {
        display: block;
        margin-top: 40px !important;
    }

    button.btn.btn-primary.btn-block {
        margin-top: 25px;
    }

    .col-md-12.offset-md-1 {
        margin-left: 0;
    }

    .col.offset-md-1 {
        margin-left: 12px;
    }

    select#ShiftId {
        height: 32px;
    }
</style>
<div class="col-sm-12">
    <div class="row m-t-20">
        @if (TempData["Message"] != null)
        {
            <div class="alert alert-success" style="float: right;" role="alert">
                <b>@TempData["Message"]</b>
            </div>
        }
        @if (TempData["DeleteMessage"] != null)
        {
            <div class="alert alert-danger" style="float: right;" role="alert">
                <b>@TempData["DeleteMessage"]</b>
            </div>
        }

        <div class="panel panel-info">
            <div class="panel-heading ">@Model.Assignname - Schedule Shift </div>
            <div class="white-box">
                @using (Html.BeginForm("ShiftSchedules", "Admin", new { id = Id }, FormMethod.Post, new { id = "ShiftScheduleForm", enctype = "multipart/form-data" }))
                {

                    @Html.HiddenFor(model => model.UserId)
                    <div class="row">
                        <div class="col-md-12 offset-md-1">
                            <form id="form_create_appointment">
                                <div class="col-md-3 form-group">
                                    <label class="required">Shift Start</label>
                                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md-3 form-group">
                                    <label class="required">Shift End</label>
                                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-row">

                                    <div class="col-md-3 form-group">
                                        <button type="submit" class="btn btn-primary btn-block">Save</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col offset-md-1">
                            <div class="row">
                                <div class="col">
                                    <h3>Scheduled Shift</h3>
                                </div>
                            </div>
                            <table class="table table-bordered table-hover table-striped table-sm" id="appointment_list">
                                <thead class="thead-dark">
                                    <tr>
                                        <th scope="col" class="text-center align-middle">Sno.</th>
                                        <th scope="col" class="text-center align-middle">Start Date</th>
                                        <th scope="col" class="text-center align-middle">End Date</th>
                                        <th scope="col" class="text-center align-middle">Start time</th>
                                        <th scope="col" class="text-center align-middle">End time</th>
                                        <th scope="col" class="text-center align-middle">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.ShiftScheduleList != null)
                                    {
                                        foreach (var item in Model.ShiftScheduleList)
                                        {
                                            sno = sno + 1;
                                            <tr role="row" class="line-content">
                                                <td class="text-center">@sno</td>
                                                <td class="text-center">@(item.StartDate.Value.ToString("dddd, dd MMMM yyyy"))</td>
                                                <td class="text-center">@(item.EndDate.Value.ToString("dddd, dd MMMM yyyy"))</td>
                                                <td class="text-center">@(item.StartDate.Value.ToString("hh:mm tt"))</td>
                                                <td class="text-center">@(item.EndDate.Value.ToString("hh:mm tt"))</td>
                                                <td class="text-center">
                                                    <span class="delete"><a href="~/Admin/ShiftSchedule/?id=@item.Id&userid=@item.UserId" class="fcbtn btn btn-info btn-outline btn-1f">Edit</a></span>
                                                    <span class="delete"><a href="~/Admin/DeleteShiftSchedule/@item.Id/?userid=@item.UserId" onclick="return confirm('Are you sure you wish to Delete item ?');" class="fcbtn btn btn-danger btn-outline btn-1f">Delete</a></span>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr role="row" class="line-content">
                                            <td class="text-center">@sno</td>
                                            <td class="text-center">@Html.Raw("Nothing Scheduled")</td>
                                            <td class="text-center">@Html.Raw("Nothing Scheduled")</td>
                                            <td class="text-center">@Html.Raw("N/A")</td>
                                            <td class="text-center">@Html.Raw("N/A")</td>
                                            <td class="text-center">@Html.Raw("N/A")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.2/jquery.min.js"></script>
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.rawgit.com/Eonasdan/bootstrap-datetimepicker/e8bddc60e73c1ec2475f827be36e1957af72e2ea/build/css/bootstrap-datetimepicker.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.9.0/moment-with-locales.js"></script>
<script src="https://cdn.rawgit.com/Eonasdan/bootstrap-datetimepicker/e8bddc60e73c1ec2475f827be36e1957af72e2ea/src/js/bootstrap-datetimepicker.js"></script>


<script>

     $(document).ready(function () {
        var today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());
        $('#StartDate').datetimepicker({
            minDate: today,
            format: 'D/MM/YYYY h:mm A',
        });
        $('#EndDate').datetimepicker({
            minDate: today,
            format: 'D/MM/YYYY h:mm A',
        });

        jQuery.validator.methods["date"] = function (value, element) { return true; }
        $.ajax({
            type: 'Get',
            url: '/Admin/ShiftSchedule/',
            data: { UserId: UserId, StartDate: StartDate, EndDate: EndDate },
            success: function (data) {
                window.location.href = `/Admin/ShiftSchedule?StartDate=${StartDate}&UserId=${UserId}&EndDate=${'@Model.EndDate'}&id=${'@Id'}`;

            }
        })
     });

</script>



@*$('#Hours').keyup(function () {
        var StartDate = $("#StartDate").val() // Reading The id of the checkbox through value
        var hours = $("#Hours").val(); // Reading The id of the checkbox through value
        var UserId = '@UserId';
        $.ajax({
            type: 'Get',
            url: '/Admin/ShiftSchedule/',
            data: { hours: hours, UserId: UserId, StartDate: StartDate},
            success: function (data) {
                window.location.href = `/Admin/ShiftSchedule?hours=${hours}&StartDate=${StartDate}&UserId=${UserId}&EndDate=${'@Model.EndDate'}&id=${'@Id'}`;
            }
        });
    });*@

@*$(document).ready(function () {

        $('#StartDate').datetimepicker({
            //minDate: new Date(),
            format: 'MM/DD/YYYY LT',
        });
        $('#EndDate').datetimepicker({
            minDate: today,
            format: 'MM/DD/YYYY LT',
        });
        jQuery.validator.methods["date"] = function (value, element) { return true; }
    });*@

<script>
    function checkDates() {
        var input = document.getElementById("StartDate").value;
        console.log("Input: " + input);
        console.log();
        var input2 = document.getElementById("EndDate").value;
        console.log("Input: " + input2);
    }
</script>

<!--$('#ShiftScheduleForm').on('submit', (e) => {
            console.log(e)
            const startDate = new Date($('#StartDate').val()).toISOString()
            const endDate = new Date($('#EndDate').val()).toISOString()-->
@*$.ajax({
        type: 'POST',
        url: `/Admin/ShiftSchedule/${'@Id'}`,
        data: { UserId: UserId, StartDate: startDate, EndDate: endDate }
    })*@
<!--return true;
})-->
